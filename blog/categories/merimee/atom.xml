<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Merimee | Atwam]]></title>
  <link href="http://blog.atwam.com/blog/categories/merimee/atom.xml" rel="self"/>
  <link href="http://blog.atwam.com/"/>
  <updated>2013-06-11T08:34:34+01:00</updated>
  <id>http://blog.atwam.com/</id>
  <author>
    <name><![CDATA[Atwam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spell checking should be part of your view tests]]></title>
    <link href="http://blog.atwam.com/blog/2012/02/25/spell-checking-should-be-part-of-your-view-tests/"/>
    <updated>2012-02-25T21:16:00+00:00</updated>
    <id>http://blog.atwam.com/blog/2012/02/25/spell-checking-should-be-part-of-your-view-tests</id>
    <content type="html"><![CDATA[<p>So it all started when I asked a friend to test this new app I'm building :
"On your main page, <em>garantee</em>. You should really check your spelling, people will know you are French !".</p>

<p>So here I went, naively googling for "website spell checker", with either pricey reports or simple websites
where I'd have to copy-paste my text from all my pages. Then, I found <a href="http://afterthedeadline.com/">AfterTheDeadline</a>.
It looks great, open-source, recently bought by wordpress.com, and they even provide an API.</p>

<p>So, spent my evening doing stuff, and here we are with a new gem : <a href="https://rubygems.org/gems/merimee">Merimee</a> (<a href="http://github.com/atwam/merimee/">github</a>).</p>

<!-- more -->


<h2>What does it do ?</h2>

<p>It gives you some rspec macros to test your views spelling, and fails your tests if it finds errors.</p>

<h2>Install</h2>

<p>So here we are with our existing rails project. Installation is very easy :</p>

<p>``` ruby Gemfile</p>

<h1>:require => false is mandatory, or the gem may not hook properly into rspec</h1>

<p>gem 'merimee', :group => :test, :require => false
```</p>

<p><code>ruby spec_helper.rb
Spork.prefork do
  #...
  require 'merimee'
end
</code></p>

<p><code>ruby spec/views/splash/index.html_spec.rb
describe "splash/index" do
  it_should_have_a_correct_spelling
end
</code></p>

<p>And voil√†, your test should still be green, or fail if there's a spelling error :</p>

<p>```rbcon
Failures:</p>

<p>  1) splash/index should have a correct spelling
     Failure/Error: rendered.should have_a_correct_spelling
      [error : spelling - Spelling] garantee (suggested: guarantee)
      [error : spelling - Spelling] faq (suggested: far, fat, fan, fax, fad)
     # /Users/wam/Dev/merimee/lib/merimee/rspec/view_checker_helper.rb:27:in `block in it_should_have_a_correct_spelling'</p>

<p>Finished in 1.84 seconds
1 example, 1 failure
```</p>

<p>Have a look at the <a href="https://github.com/atwam/merimee">readme</a> to see how you can configure the gem :
you can choose which errors make your test fail, and configure your own dictionary to ignore some
spelling errors.</p>

<h2>Warning</h2>

<p>Since AtD server will reject your requests if they are too close from each other, the macro has a nasty <code>sleep 0.7</code> to make
sure it doesn't happen. If you find a better solution, send me a pull request. You may want to have these tests only run
in some test groups.</p>

<h2>Planned features ?</h2>

<p>Oh, I have a few ideas : add a rake task with a full report, for all views, including both errors (spelling etc.) and warnings (grammar warnings
generated by AtD, like repetitions, double negations etc.
I want to enable merimee in Test::Case as well, but I'm not so used to it.</p>

<p>Feel free to fork and send me your pull requests, or just point any issue you have.</p>
]]></content>
  </entry>
  
</feed>
