<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Atwam]]></title>
  <link href="http://blog.atwam.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.atwam.com/"/>
  <updated>2016-02-04T01:05:49+00:00</updated>
  <id>http://blog.atwam.com/</id>
  <author>
    <name><![CDATA[Atwam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building dep_selector on mac os x]]></title>
    <link href="http://blog.atwam.com/blog/2013/04/25/building-dep-selector-on-mac-os-x/"/>
    <updated>2013-04-25T23:13:00+01:00</updated>
    <id>http://blog.atwam.com/blog/2013/04/25/building-dep-selector-on-mac-os-x</id>
    <content type="html"><![CDATA[Just a quick post, having finally figured out how to install dep\_selector on mac os x.
The issue is that having xcode installed which configures `clang` as the default compiler, some native gems break.

It took me some time, but at long least I can now build a native gem using `gcc` instead of `clang` on mac os x.
And you'll see it's not very easy to have ruby change its compiler for gems native extensions compilation.
<!-- more -->

## Installing gecode

`brew install gecode` is supposed to be fine, but it failed for me. The solution was to use llvm :

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install gecode --use-llvm
</span></code></pre></td></tr></table></div></figure>

## Install dep\_selector

`dep_selector` uses the standard `mkmf` to create the makefile that will be used to build the native extension for the gem.
`mkmf` in turn uses `RbConfig`, which is defined in `rbconfig.rb` deep in your ruby source and was generated when your ruby was built.
The issue is that this `rbconfig` hard codes the value of the `CC` variable that will be used in the `Makefile`.

`gem install dep_selector` fails with compilation errors by clang.

* First solution : modify `rbconfig.rb` to use `ENV['CC']` if defined. Yeah, that'd be ugly.
* Second solution : manually build the extension and let rubygems know that our gem is installed.

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$GEM_HOME</span>/gems/dep_selector-0.0.8/ext/dep_gecode
</span><span class='line'><span class="nv">$ </span><span class="c"># First let&#39;s confirm that this was built with the wrong compiler</span>
</span><span class='line'><span class="nv">$ </span>grep clang Makefile
</span><span class='line'><span class="nv">CC</span> <span class="o">=</span> clang
</span></code></pre></td></tr></table></div></figure>

Now let's edit the `extconf.rb`, adding the following line just before the last (`create_makefile()` thing).
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w{CC CXX}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>  <span class="no">RbConfig</span><span class="o">::</span><span class="no">MAKEFILE_CONFIG</span><span class="o">[</span><span class="n">c</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="n">c</span><span class="o">]</span> <span class="k">if</span> <span class="no">ENV</span><span class="o">[</span><span class="n">c</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

And let's recreate the `Makefile` and build our extension.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ CC</span><span class="o">=</span>gcc <span class="nv">CXX</span><span class="o">=</span>g++ ruby extconf.rb
</span><span class='line'><span class="nv">$ </span>grep CC Makefile <span class="c"># Should output gcc, great success !</span>
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>make install <span class="c"># This will copy the library so to a proper ruby directory</span>
</span></code></pre></td></tr></table></div></figure>

We can check that the compilation worked, because there is now a `dep_gecode.bundle` file.
Now we need to let the gem system know that our gem is added. 
[The manual for `gem install`](http://docs.rubygems.org/read/chapter/10#page33) tells us that we'll have to copy the gemspec. The following should do the trick :

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$GEM_HOME</span>/gems/dep_selector-0.0.8
</span><span class='line'><span class="nv">$ </span>gem spec --local ../../cache/dep_selector-0.0.8.gem --ruby &gt; ../../specifications/dep_selector-0.0.8.gemspec
</span><span class='line'><span class="nv">$ </span>gem list dep_selector
</span><span class='line'>*** LOCAL GEMS ***
</span><span class='line'>
</span><span class='line'>dep_selector <span class="o">(</span>0.0.8<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>irb
</span><span class='line'>&gt;&gt; require <span class="s1">&#39;dep_selector&#39;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span><span class='line'>&gt;&gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>

That's it, now we can move on and work on our chef install.
]]></content>
  </entry>
  
</feed>
